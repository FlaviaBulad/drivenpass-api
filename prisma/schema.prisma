generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  cards       Cards[]
  credentials Credentials[]
  safeNotes   SafeNotes[]
  wifi        Wifi[]
}

model Cards {
  id Int @id @default(autoincrement())
  title          String
  cardHolderName String
  number         String
  securityCode   String
  expirationDate String
  password       String
  type           CardTypes
  isVirtual      Boolean
  user           Users     @relation(fields: [userId], references: [id])
  userId         Int

   @@unique([title, userId])
}

model Credentials {
  id Int @id @default(autoincrement())
  title    String
  url      String
  username String
  password String
  user     Users  @relation(fields: [userId], references: [id])
  userId   Int

   @@unique([title, userId])
}

model SafeNotes {
  id Int @id @default(autoincrement())
  title  String @db.VarChar(50)
  note   String @db.VarChar(1000)
  user   Users  @relation(fields: [userId], references: [id])
  userId Int

   @@unique([title, userId])
}

model Wifi {
  id Int @id @default(autoincrement())
  title       String
  networkName String
  password    String
  user        Users  @relation(fields: [userId], references: [id])
  userId      Int

   @@unique([title, userId])
}

enum CardTypes {
  credit
  debit
  hybrid
}
